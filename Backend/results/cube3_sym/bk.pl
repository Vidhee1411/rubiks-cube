%% stickers and cubelets
color(w).
color(y).
color(o).
color(r).
color(b).
color(g).
sticker(w_s).
sticker(y_s).
sticker(o_s).
sticker(r_s).
sticker(b_s).
sticker(g_s).
stk_col(w_s,w).
stk_col(y_s,y).
stk_col(o_s,o).
stk_col(r_s,r).
stk_col(b_s,b).
stk_col(g_s,g).
face(w_f).
face(y_f).
face(o_f).
face(r_f).
face(b_f).
face(g_f).
face_col(w_f,w).
face_col(y_f,y).
face_col(o_f,o).
face_col(r_f,r).
face_col(b_f,b).
face_col(g_f,g).

white(w).
white(w_f).
white(w_s).
yellow(y).
yellow(y_f).
yellow(y_s).
orange(o).
orange(o_f).
orange(o_s).
red(r).
red(r_f).
red(r_s).
blue(b).
blue(b_f).
blue(b_s).
green(g).
green(g_f).
green(g_s).


%% Directions
cube_dir(cl).
cube_dir(cc).
cube_dir(op).

clockwise(cl).
counterclockwise(cc).
opposite(op).
cube_dir_opposite(cc, cl).
cube_dir_opposite(cl, cc).
cube_dir_opposite(op, op).

face_adjacent_dir(w_f, b_f, r_f, cl).
face_adjacent_dir(w_f, r_f, g_f, cl).
face_adjacent_dir(w_f, g_f, o_f, cl).
face_adjacent_dir(w_f, o_f, b_f, cl).
face_adjacent_dir(o_f, y_f, b_f, cl).
face_adjacent_dir(o_f, b_f, w_f, cl).
face_adjacent_dir(o_f, w_f, g_f, cl).
face_adjacent_dir(o_f, g_f, y_f, cl).
face_adjacent_dir(g_f, o_f, w_f, cl).
face_adjacent_dir(g_f, w_f, r_f, cl).
face_adjacent_dir(g_f, r_f, y_f, cl).
face_adjacent_dir(g_f, y_f, o_f, cl).
face_adjacent_dir(y_f, b_f, o_f, cl).
face_adjacent_dir(y_f, r_f, b_f, cl).
face_adjacent_dir(y_f, g_f, r_f, cl).
face_adjacent_dir(y_f, o_f, g_f, cl).
face_adjacent_dir(r_f, y_f, g_f, cl).
face_adjacent_dir(r_f, b_f, y_f, cl).
face_adjacent_dir(r_f, w_f, b_f, cl).
face_adjacent_dir(r_f, g_f, w_f, cl).
face_adjacent_dir(b_f, o_f, y_f, cl).
face_adjacent_dir(b_f, w_f, o_f, cl).
face_adjacent_dir(b_f, r_f, w_f, cl).
face_adjacent_dir(b_f, y_f, r_f, cl).

face_adjacent_dir(A, B, C, cc) :- face_adjacent_dir(A, C, B, cl).
face_adjacent_dir(A, B, D, op) :- face_adjacent_dir(A, B, C, cl), face_adjacent_dir(A, C, D, cl).
face_adjacent_dir(A, D, B, op) :- face_adjacent_dir(A, B, C, cl), face_adjacent_dir(A, C, D, cl).

face_rel_cl(A, Cbl, Stk, F2) :- onface(A, Cbl, Stk, F1), onface(A, Cbl, Stk2, F_ref), face_adjacent_dir(F_ref, F1, F2, cl), Stk \= Stk2.
face_rel_cc(A, Cbl, Stk, F2) :- onface(A, Cbl, Stk, F1), onface(A, Cbl, Stk2, F_ref), face_adjacent_dir(F_ref, F1, F2, cc), Stk \= Stk2.
face_rel_90(A, Cbl, Stk, F2) :- face_rel_cl(A, Cbl, Stk, F2).
face_rel_90(A, Cbl, Stk, F2) :- face_rel_cc(A, Cbl, Stk, F2).
face_rel_180(A, Cbl, Stk, F2) :- onface(A, Cbl, Stk, F1), onface(A, Cbl, Stk2, F_ref), face_adjacent_dir(F_ref, F1, F2, op), Stk \= Stk2.

% onface
onface(state(E,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,S,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_), E, S, w_f).
onface(state(_,E,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,S,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_), E, S, w_f).
onface(state(_,_,E,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,S,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_), E, S, w_f).
onface(state(_,_,_,E,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,S,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_), E, S, w_f).
onface(state(_,_,_,_,E,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,S,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_), E, S, w_f).
onface(state(_,_,_,_,_,E,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,S,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_), E, S, w_f).
onface(state(_,_,_,_,_,_,E,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,S,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_), E, S, w_f).
onface(state(_,_,_,_,_,_,_,E,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,S,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_), E, S, w_f).
onface(state(_,_,_,_,_,_,_,_,E,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,S,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_), E, S, w_f).
onface(state(_,_,_,_,_,_,_,_,_,E,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,S,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_), E, S, y_f).
onface(state(_,_,_,_,_,_,_,_,_,_,E,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,S,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_), E, S, y_f).
onface(state(_,_,_,_,_,_,_,_,_,_,_,E,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,S,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_), E, S, y_f).
onface(state(_,_,_,_,_,_,_,_,_,_,_,_,E,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,S,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_), E, S, y_f).
onface(state(_,_,_,_,_,_,_,_,_,_,_,_,_,E,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,S,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_), E, S, y_f).
onface(state(_,_,_,_,_,_,_,_,_,_,_,_,_,_,E,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,S,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_), E, S, y_f).
onface(state(_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,E,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,S,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_), E, S, y_f).
onface(state(_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,E,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,S,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_), E, S, y_f).
onface(state(_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,E,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,S,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_), E, S, y_f).
onface(state(_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,E,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,S,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_), E, S, o_f).
onface(state(_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,E,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,S,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_), E, S, o_f).
onface(state(_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,E,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,S,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_), E, S, o_f).
onface(state(_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,E,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,S,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_), E, S, o_f).
onface(state(_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,E,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,S,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_), E, S, o_f).
onface(state(_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,E,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,S,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_), E, S, o_f).
onface(state(_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,E,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,S,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_), E, S, o_f).
onface(state(_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,E,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,S,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_), E, S, o_f).
onface(state(_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,E,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,S,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_), E, S, o_f).
onface(state(_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,E,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,S,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_), E, S, r_f).
onface(state(_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,E,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,S,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_), E, S, r_f).
onface(state(_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,E,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,S,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_), E, S, r_f).
onface(state(_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,E,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,S,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_), E, S, r_f).
onface(state(_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,E,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,S,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_), E, S, r_f).
onface(state(_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,E,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,S,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_), E, S, r_f).
onface(state(_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,E,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,S,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_), E, S, r_f).
onface(state(_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,E,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,S,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_), E, S, r_f).
onface(state(_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,E,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,S,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_), E, S, r_f).
onface(state(_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,E,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,S,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_), E, S, b_f).
onface(state(_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,E,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,S,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_), E, S, b_f).
onface(state(_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,E,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,S,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_), E, S, b_f).
onface(state(_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,E,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,S,_,_,_,_,_,_,_,_,_,_,_,_,_,_), E, S, b_f).
onface(state(_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,E,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,S,_,_,_,_,_,_,_,_,_,_,_,_,_), E, S, b_f).
onface(state(_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,E,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,S,_,_,_,_,_,_,_,_,_,_,_,_), E, S, b_f).
onface(state(_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,E,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,S,_,_,_,_,_,_,_,_,_,_,_), E, S, b_f).
onface(state(_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,E,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,S,_,_,_,_,_,_,_,_,_,_), E, S, b_f).
onface(state(_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,E,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,S,_,_,_,_,_,_,_,_,_), E, S, b_f).
onface(state(_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,E,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,S,_,_,_,_,_,_,_,_), E, S, g_f).
onface(state(_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,E,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,S,_,_,_,_,_,_,_), E, S, g_f).
onface(state(_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,E,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,S,_,_,_,_,_,_), E, S, g_f).
onface(state(_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,E,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,S,_,_,_,_,_), E, S, g_f).
onface(state(_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,E,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,S,_,_,_,_), E, S, g_f).
onface(state(_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,E,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,S,_,_,_), E, S, g_f).
onface(state(_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,E,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,S,_,_), E, S, g_f).
onface(state(_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,E,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,S,_), E, S, g_f).
onface(state(_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,E,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,S), E, S, g_f).

% move
move(state(E18,E6,E19,E7,E0,E8,E20,E9,E21,E22,E10,E23,E11,E1,E12,E24,E13,E25,E22,E14,E19,E10,E2,E6,E23,E15,E18,E25,E16,E20,E13,E3,E9,E24,E17,E21,E24,E17,E21,E11,E4,E8,E22,E14,E19,E23,E15,E18,E12,E5,E7,E25,E16,E20,S0,S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53), w, cc, state(E19,E8,E21,E6,E0,E9,E18,E7,E20,E22,E10,E23,E11,E1,E12,E24,E13,E25,E22,E14,E21,E10,E2,E8,E23,E15,E19,E25,E16,E18,E13,E3,E7,E24,E17,E20,E24,E17,E20,E11,E4,E9,E22,E14,E21,E23,E15,E19,E12,E5,E6,E25,E16,E18,S2,S5,S8,S1,S4,S7,S0,S3,S6,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S38,S21,S22,S41,S24,S25,S44,S27,S28,S47,S30,S31,S50,S33,S34,S53,S36,S37,S29,S39,S40,S32,S42,S43,S35,S45,S46,S20,S48,S49,S23,S51,S52,S26)).
move(state(E18,E6,E19,E7,E0,E8,E20,E9,E21,E22,E10,E23,E11,E1,E12,E24,E13,E25,E22,E14,E19,E10,E2,E6,E23,E15,E18,E25,E16,E20,E13,E3,E9,E24,E17,E21,E24,E17,E21,E11,E4,E8,E22,E14,E19,E23,E15,E18,E12,E5,E7,E25,E16,E20,S0,S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53), w, cl, state(E20,E7,E18,E9,E0,E6,E21,E8,E19,E22,E10,E23,E11,E1,E12,E24,E13,E25,E22,E14,E18,E10,E2,E7,E23,E15,E20,E25,E16,E21,E13,E3,E8,E24,E17,E19,E24,E17,E19,E11,E4,E6,E22,E14,E18,E23,E15,E20,E12,E5,E9,E25,E16,E21,S6,S3,S0,S7,S4,S1,S8,S5,S2,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S47,S21,S22,S50,S24,S25,S53,S27,S28,S38,S30,S31,S41,S33,S34,S44,S36,S37,S20,S39,S40,S23,S42,S43,S26,S45,S46,S29,S48,S49,S32,S51,S52,S35)).
move(state(E18,E6,E19,E7,E0,E8,E20,E9,E21,E22,E10,E23,E11,E1,E12,E24,E13,E25,E22,E14,E19,E10,E2,E6,E23,E15,E18,E25,E16,E20,E13,E3,E9,E24,E17,E21,E24,E17,E21,E11,E4,E8,E22,E14,E19,E23,E15,E18,E12,E5,E7,E25,E16,E20,S0,S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53), y, cc, state(E18,E6,E19,E7,E0,E8,E20,E9,E21,E23,E12,E25,E10,E1,E13,E22,E11,E24,E23,E14,E19,E12,E2,E6,E25,E15,E18,E24,E16,E20,E11,E3,E9,E22,E17,E21,E22,E17,E21,E10,E4,E8,E23,E14,E19,E25,E15,E18,E13,E5,E7,E24,E16,E20,S0,S1,S2,S3,S4,S5,S6,S7,S8,S11,S14,S17,S10,S13,S16,S9,S12,S15,S45,S19,S20,S48,S22,S23,S51,S25,S26,S36,S28,S29,S39,S31,S32,S42,S34,S35,S18,S37,S38,S21,S40,S41,S24,S43,S44,S27,S46,S47,S30,S49,S50,S33,S52,S53)).
move(state(E18,E6,E19,E7,E0,E8,E20,E9,E21,E22,E10,E23,E11,E1,E12,E24,E13,E25,E22,E14,E19,E10,E2,E6,E23,E15,E18,E25,E16,E20,E13,E3,E9,E24,E17,E21,E24,E17,E21,E11,E4,E8,E22,E14,E19,E23,E15,E18,E12,E5,E7,E25,E16,E20,S0,S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53), y, cl, state(E18,E6,E19,E7,E0,E8,E20,E9,E21,E24,E11,E22,E13,E1,E10,E25,E12,E23,E24,E14,E19,E11,E2,E6,E22,E15,E18,E23,E16,E20,E12,E3,E9,E25,E17,E21,E25,E17,E21,E13,E4,E8,E24,E14,E19,E22,E15,E18,E10,E5,E7,E23,E16,E20,S0,S1,S2,S3,S4,S5,S6,S7,S8,S15,S12,S9,S16,S13,S10,S17,S14,S11,S36,S19,S20,S39,S22,S23,S42,S25,S26,S45,S28,S29,S48,S31,S32,S51,S34,S35,S27,S37,S38,S30,S40,S41,S33,S43,S44,S18,S46,S47,S21,S49,S50,S24,S52,S53)).
move(state(E18,E6,E19,E7,E0,E8,E20,E9,E21,E22,E10,E23,E11,E1,E12,E24,E13,E25,E22,E14,E19,E10,E2,E6,E23,E15,E18,E25,E16,E20,E13,E3,E9,E24,E17,E21,E24,E17,E21,E11,E4,E8,E22,E14,E19,E23,E15,E18,E12,E5,E7,E25,E16,E20,S0,S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53), o, cc, state(E23,E15,E18,E7,E0,E8,E20,E9,E21,E19,E14,E22,E11,E1,E12,E24,E13,E25,E19,E6,E18,E14,E2,E15,E22,E10,E23,E25,E16,E20,E13,E3,E9,E24,E17,E21,E24,E17,E21,E11,E4,E8,E19,E6,E18,E22,E10,E23,E12,E5,E7,E25,E16,E20,S45,S46,S47,S3,S4,S5,S6,S7,S8,S44,S43,S42,S12,S13,S14,S15,S16,S17,S20,S23,S26,S19,S22,S25,S18,S21,S24,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S2,S1,S0,S9,S10,S11,S48,S49,S50,S51,S52,S53)).
move(state(E18,E6,E19,E7,E0,E8,E20,E9,E21,E22,E10,E23,E11,E1,E12,E24,E13,E25,E22,E14,E19,E10,E2,E6,E23,E15,E18,E25,E16,E20,E13,E3,E9,E24,E17,E21,E24,E17,E21,E11,E4,E8,E22,E14,E19,E23,E15,E18,E12,E5,E7,E25,E16,E20,S0,S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53), o, cl, state(E19,E14,E22,E7,E0,E8,E20,E9,E21,E23,E15,E18,E11,E1,E12,E24,E13,E25,E23,E10,E22,E15,E2,E14,E18,E6,E19,E25,E16,E20,E13,E3,E9,E24,E17,E21,E24,E17,E21,E11,E4,E8,E23,E10,E22,E18,E6,E19,E12,E5,E7,E25,E16,E20,S44,S43,S42,S3,S4,S5,S6,S7,S8,S45,S46,S47,S12,S13,S14,S15,S16,S17,S24,S21,S18,S25,S22,S19,S26,S23,S20,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S11,S10,S9,S0,S1,S2,S48,S49,S50,S51,S52,S53)).
move(state(E18,E6,E19,E7,E0,E8,E20,E9,E21,E22,E10,E23,E11,E1,E12,E24,E13,E25,E22,E14,E19,E10,E2,E6,E23,E15,E18,E25,E16,E20,E13,E3,E9,E24,E17,E21,E24,E17,E21,E11,E4,E8,E22,E14,E19,E23,E15,E18,E12,E5,E7,E25,E16,E20,S0,S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53), r, cc, state(E18,E6,E19,E7,E0,E8,E21,E17,E24,E22,E10,E23,E11,E1,E12,E25,E16,E20,E22,E14,E19,E10,E2,E6,E23,E15,E18,E20,E9,E21,E16,E3,E17,E25,E13,E24,E25,E13,E24,E11,E4,E8,E22,E14,E19,E23,E15,E18,E12,E5,E7,E20,E9,E21,S0,S1,S2,S3,S4,S5,S38,S37,S36,S9,S10,S11,S12,S13,S14,S51,S52,S53,S18,S19,S20,S21,S22,S23,S24,S25,S26,S29,S32,S35,S28,S31,S34,S27,S30,S33,S17,S16,S15,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S6,S7,S8)).
move(state(E18,E6,E19,E7,E0,E8,E20,E9,E21,E22,E10,E23,E11,E1,E12,E24,E13,E25,E22,E14,E19,E10,E2,E6,E23,E15,E18,E25,E16,E20,E13,E3,E9,E24,E17,E21,E24,E17,E21,E11,E4,E8,E22,E14,E19,E23,E15,E18,E12,E5,E7,E25,E16,E20,S0,S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53), r, cl, state(E18,E6,E19,E7,E0,E8,E25,E16,E20,E22,E10,E23,E11,E1,E12,E21,E17,E24,E22,E14,E19,E10,E2,E6,E23,E15,E18,E24,E13,E25,E17,E3,E16,E21,E9,E20,E21,E9,E20,E11,E4,E8,E22,E14,E19,E23,E15,E18,E12,E5,E7,E24,E13,E25,S0,S1,S2,S3,S4,S5,S51,S52,S53,S9,S10,S11,S12,S13,S14,S38,S37,S36,S18,S19,S20,S21,S22,S23,S24,S25,S26,S33,S30,S27,S34,S31,S28,S35,S32,S29,S8,S7,S6,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S15,S16,S17)).
move(state(E18,E6,E19,E7,E0,E8,E20,E9,E21,E22,E10,E23,E11,E1,E12,E24,E13,E25,E22,E14,E19,E10,E2,E6,E23,E15,E18,E25,E16,E20,E13,E3,E9,E24,E17,E21,E24,E17,E21,E11,E4,E8,E22,E14,E19,E23,E15,E18,E12,E5,E7,E25,E16,E20,S0,S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53), b, cc, state(E18,E6,E22,E7,E0,E14,E20,E9,E19,E24,E10,E23,E17,E1,E12,E21,E13,E25,E24,E11,E22,E10,E2,E6,E23,E15,E18,E25,E16,E20,E13,E3,E9,E21,E8,E19,E21,E8,E19,E17,E4,E14,E24,E11,E22,E23,E15,E18,E12,E5,E7,E25,E16,E20,S0,S1,S18,S3,S4,S19,S6,S7,S20,S33,S10,S11,S34,S13,S14,S35,S16,S17,S15,S12,S9,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S8,S5,S2,S38,S41,S44,S37,S40,S43,S36,S39,S42,S45,S46,S47,S48,S49,S50,S51,S52,S53)).
move(state(E18,E6,E19,E7,E0,E8,E20,E9,E21,E22,E10,E23,E11,E1,E12,E24,E13,E25,E22,E14,E19,E10,E2,E6,E23,E15,E18,E25,E16,E20,E13,E3,E9,E24,E17,E21,E24,E17,E21,E11,E4,E8,E22,E14,E19,E23,E15,E18,E12,E5,E7,E25,E16,E20,S0,S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53), b, cl, state(E18,E6,E21,E7,E0,E17,E20,E9,E24,E19,E10,E23,E14,E1,E12,E22,E13,E25,E19,E8,E21,E10,E2,E6,E23,E15,E18,E25,E16,E20,E13,E3,E9,E22,E11,E24,E22,E11,E24,E14,E4,E17,E19,E8,E21,E23,E15,E18,E12,E5,E7,E25,E16,E20,S0,S1,S35,S3,S4,S34,S6,S7,S33,S20,S10,S11,S19,S13,S14,S18,S16,S17,S2,S5,S8,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S9,S12,S15,S42,S39,S36,S43,S40,S37,S44,S41,S38,S45,S46,S47,S48,S49,S50,S51,S52,S53)).
move(state(E18,E6,E19,E7,E0,E8,E20,E9,E21,E22,E10,E23,E11,E1,E12,E24,E13,E25,E22,E14,E19,E10,E2,E6,E23,E15,E18,E25,E16,E20,E13,E3,E9,E24,E17,E21,E24,E17,E21,E11,E4,E8,E22,E14,E19,E23,E15,E18,E12,E5,E7,E25,E16,E20,S0,S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53), g, cc, state(E20,E6,E19,E16,E0,E8,E25,E9,E21,E22,E10,E18,E11,E1,E15,E24,E13,E23,E22,E14,E19,E10,E2,E6,E18,E7,E20,E23,E12,E25,E13,E3,E9,E24,E17,E21,E24,E17,E21,E11,E4,E8,E22,E14,E19,E18,E7,E20,E15,E5,E16,E23,E12,E25,S29,S1,S2,S28,S4,S5,S27,S7,S8,S9,S10,S26,S12,S13,S25,S15,S16,S24,S18,S19,S20,S21,S22,S23,S0,S3,S6,S11,S14,S17,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S47,S50,S53,S46,S49,S52,S45,S48,S51)).
move(state(E18,E6,E19,E7,E0,E8,E20,E9,E21,E22,E10,E23,E11,E1,E12,E24,E13,E25,E22,E14,E19,E10,E2,E6,E23,E15,E18,E25,E16,E20,E13,E3,E9,E24,E17,E21,E24,E17,E21,E11,E4,E8,E22,E14,E19,E23,E15,E18,E12,E5,E7,E25,E16,E20,S0,S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53), g, cl, state(E23,E6,E19,E15,E0,E8,E18,E9,E21,E22,E10,E25,E11,E1,E16,E24,E13,E20,E22,E14,E19,E10,E2,E6,E25,E12,E23,E20,E7,E18,E13,E3,E9,E24,E17,E21,E24,E17,E21,E11,E4,E8,E22,E14,E19,E25,E12,E23,E16,E5,E15,E20,E7,E18,S24,S1,S2,S25,S4,S5,S26,S7,S8,S9,S10,S27,S12,S13,S28,S15,S16,S29,S18,S19,S20,S21,S22,S23,S17,S14,S11,S6,S3,S0,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S51,S48,S45,S52,S49,S46,S53,S50,S47)).


% cubelet stickers
has_stk(wo, w_s).
has_stk(wo, o_s).
has_stk(wg, w_s).
has_stk(wg, g_s).
has_stk(wb, w_s).
has_stk(wb, b_s).
has_stk(wr, w_s).
has_stk(wr, r_s).
has_stk(yo, y_s).
has_stk(yo, o_s).
has_stk(yb, y_s).
has_stk(yb, b_s).
has_stk(yg, y_s).
has_stk(yg, g_s).
has_stk(yr, y_s).
has_stk(yr, r_s).
has_stk(ob, o_s).
has_stk(ob, b_s).
has_stk(og, o_s).
has_stk(og, g_s).
has_stk(rg, r_s).
has_stk(rg, g_s).
has_stk(rb, r_s).
has_stk(rb, b_s).
has_stk(wog, w_s).
has_stk(wog, o_s).
has_stk(wog, g_s).
has_stk(wob, w_s).
has_stk(wob, o_s).
has_stk(wob, b_s).
has_stk(wrg, w_s).
has_stk(wrg, r_s).
has_stk(wrg, g_s).
has_stk(wrb, w_s).
has_stk(wrb, r_s).
has_stk(wrb, b_s).
has_stk(yob, y_s).
has_stk(yob, o_s).
has_stk(yob, b_s).
has_stk(yog, y_s).
has_stk(yog, o_s).
has_stk(yog, g_s).
has_stk(yrb, y_s).
has_stk(yrb, r_s).
has_stk(yrb, b_s).
has_stk(yrg, y_s).
has_stk(yrg, r_s).
has_stk(yrg, g_s).

% cubelets
edge(wo).
edge(wg).
edge(wb).
edge(wr).
edge(yo).
edge(yb).
edge(yg).
edge(yr).
edge(ob).
edge(og).
edge(rg).
edge(rb).
corner(wog).
corner(wob).
corner(wrg).
corner(wrb).
corner(yob).
corner(yog).
corner(yrb).
corner(yrg).

is_subset([],_).
is_subset([H|T],Y):- member(H,Y), select(H,Y,Z), is_subset(T,Z).
set_equal(X,Y):- is_subset(X,Y), is_subset(Y,X).

cubelet(Cbl) :- edge(Cbl).
cubelet(Cbl) :- corner(Cbl).
match_stk_f(Stk, F) :- stk_col(Stk, Stk_col), face_col(F, F_col), Stk_col = F_col.
not_match_stk_f(Stk, F) :- stk_col(Stk, Stk_col), face_col(F, F_col), Stk_col \= F_col.
match_0(A, Cbl, Stk) :- has_stk(Cbl, Stk), onface(A, Cbl, Stk, F), match_stk_f(Stk, F).
match_0_flip(A, Cbl, Stk) :- edge(Cbl), face(F), has_stk(Cbl, Stk), has_stk(Cbl, Stk2), Stk \= Stk2, onface(A, Cbl, Stk2, F), match_stk_f(Stk, F).
match_cl(A, Cbl, Stk) :- has_stk(Cbl, Stk), face_rel_cl(A, Cbl, Stk, F), match_stk_f(Stk, F).
match_cc(A, Cbl, Stk) :- has_stk(Cbl, Stk), face_rel_cc(A, Cbl, Stk, F), match_stk_f(Stk, F).
match_90(A, Cbl, Stk) :- has_stk(Cbl, Stk), face_rel_90(A, Cbl, Stk, F), match_stk_f(Stk, F).
match_180(A, Cbl, Stk) :- has_stk(Cbl, Stk), face_rel_180(A, Cbl, Stk, F), match_stk_f(Stk, F).
match_180_flip(A, Cbl, Stk) :- edge(Cbl), has_stk(Cbl, Stk), has_stk(Cbl, Stk2), Stk \= Stk2, face_rel_180(A, Cbl, Stk2, F_op), match_stk_f(Stk, F_op).
not_in_place(A, Cbl) :- onface(A, Cbl, Stk, F), not_match_stk_f(Stk, F).
in_place(S, Cbl) :- edge(Cbl), onface(S, Cbl, Stk1, F1), onface(S, Cbl, Stk2, F2), match_stk_f(Stk1, F1), match_stk_f(Stk2, F2), Stk1 \= Stk2.
in_place(S, Cbl) :- corner(Cbl), onface(S, Cbl, Stk1, F1), onface(S, Cbl, Stk2, F2), onface(S, Cbl, Stk3, F3), match_stk_f(Stk1, F1), match_stk_f(Stk2, F2), match_stk_f(Stk3, F3), Stk1 \= Stk2, Stk1 \= Stk3, Stk2 \= Stk3.
in_place_set(S, IP_Set):- findall(X, in_place(S, X), IP_List), list_to_set(IP_List, IP_Set).
in_place_subset(S1, S2) :- in_place_set(S1, IP_Set1), in_place_set(S2, IP_Set2), is_subset(IP_Set1, IP_Set2).
in_place_diff(S1, S2, D) :- in_place_set(S1, IP_Set1), in_place_set(S2, IP_Set2), length(IP_Set1, L1), length(IP_Set2, L2), D is L1 - L2.

% goal
human_heur(State, Count):- aggregate(sum(E), in_place(State, E), Count).
solved(State):- in_place(State, wo), in_place(State, wg), in_place(State, wb), in_place(State, wr).
